---
import Layout from '~/layouts/PageLayout.astro';
import { createClient } from '@supabase/supabase-js';

// Initialize Supabase client
const supabaseUrl = import.meta.env.SUPABASE_URL;
const supabaseKey = import.meta.env.SUPABASE_SERVICE_ROLE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Get authentication state
const { data: { session } } = await supabase.auth.getSession();

// Debug session info
console.log('Current session:', session);

// If already authenticated, redirect to dashboard
if (session) {
  console.log('Found session, redirecting to dashboard');
  return new Response('', { status: 302, headers: { location: '/dashboard' } });
}

// Handle form submission
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const email = formData.get('email') as string;
  const password = formData.get('password') as string;

  try {
    const { data, error } = await supabase.auth.signInWithPassword({
      email,
      password
    });

    if (error) throw error;
    
    console.log('Successfully logged in:', data.user.email);
    console.log('Session data:', data.session);
    
    // Store session data in localStorage on client side
    if (typeof window !== 'undefined') {
      window.localStorage.setItem('supabase-session', JSON.stringify(data.session));
    }
    
    // Redirect to dashboard after successful login
    return new Response('', { status: 302, headers: { 
      location: '/dashboard'
    } });
  } catch (error) {
    console.error('Login error:', error);
    return new Response('Login failed', { status: 400 });
  }
}

// Check if user is already logged in
const authCookie = Astro.request.headers.get('cookie')?.split('; ').find(c => c.startsWith('supabase-auth-token='));
if (authCookie) {
  return Astro.redirect('/dashboard');
}

---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6">Login</h1>
    
    <form method="POST" class="max-w-md mx-auto space-y-4 p-6 bg-white dark:bg-slate-800 rounded-lg shadow">
      <div> 
        <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
        <input type="email" id="email" name="email" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-slate-700 dark:border-gray-600 dark:text-white">
      </div>
      
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Password</label>
        <input type="password" id="password" name="password" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:bg-slate-700 dark:border-gray-600 dark:text-white">
      </div>
      
      <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Sign in
      </button>
    </form>
  </div>
</Layout>
