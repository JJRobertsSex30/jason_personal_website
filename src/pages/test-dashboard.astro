---
import Layout from '~/layouts/PageLayout.astro';
import { createClient } from '@supabase/supabase-js';

// Initialize Supabase client with service role key
const supabase = createClient(
  import.meta.env.SUPABASE_URL,
  import.meta.env.SUPABASE_SERVICE_ROLE_KEY
);

// Fetch referrals data from Supabase
const { data: referrals, error: referralError } = await supabase
  .from('referrals')
  .select('*');

if (referralError) {
  console.error('Error fetching referrals:', referralError);
  throw new Error('Failed to fetch data from Supabase');
}

// Fetch subscribers data from ConvertKit
const convertKitApiKey = import.meta.env.SECRET;
const convertKitFormId = import.meta.env.PUBLIC_CONVERTKIT_FORM_ID;

if (!convertKitApiKey || !convertKitFormId) {
  console.error('Missing ConvertKit API credentials');
  throw new Error('Missing ConvertKit API credentials');
}

let subscribersData;
try {
  const response = await fetch(`https://api.convertkit.com/v3/forms/${convertKitFormId}/subscriptions?api_secret=${convertKitApiKey}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    }
  });

  if (!response.ok) {
    const errorText = await response.text();
    console.error('ConvertKit API error status:', response.status);
    console.error('ConvertKit API error status text:', response.statusText);
    console.error('ConvertKit API error response:', errorText);
    throw new Error(`ConvertKit API error: ${response.status} ${response.statusText}`);
  }

  subscribersData = await response.json();
  console.log('ConvertKit API response:', JSON.stringify(subscribersData, null, 2));
} catch (error) {
  console.error('Failed to fetch data from ConvertKit API:', error);
  throw new Error('Failed to fetch data from ConvertKit API');
}

const subscribers = subscribersData?.subscriptions || [];
const referralFields = new Set<string>();
referrals?.forEach(ref => {
  if (ref.referral_data) {
    Object.keys(ref.referral_data).forEach(field => referralFields.add(field));
  }
});
---

<Layout>
  <div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-6">Test Dashboard</h1>

  <div class="bg-white dark:bg-slate-800 rounded-lg shadow p-6 mb-8">
    <h2 class="text-xl font-semibold mb-4">ConvertKit Subscribers</h2>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
        {subscribers.length > 0 ? (
          <>
          <thead class="bg-gray-50 dark:bg-slate-700">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ID</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Email</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Created At</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Source</th>
              {Array.from(referralFields).map(field => (
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">{field}</th>
              ))}
            </tr>
            </thead>
            <tbody class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-gray-700">
            {subscribers.map((subscription) => (
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.id}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.subscriber?.email_address}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.state}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                  {new Date(subscription.created_at).toLocaleString()}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.source}</td>
                {Array.from(referralFields).map(field => (
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                    {subscription.subscriber?.fields?.[field] || '-'}
                  </td>
                ))}
              </tr>
            ))}
            </tbody>
            </>
          ) : (
            <p class="text-center py-4 text-gray-500 dark:text-gray-400">No subscribers found</p>
          )}
        </table>
      </div>
    </div>
  </div>
</Layout>
