---
import Layout from '~/layouts/PageLayout.astro';
import { createClient } from '@supabase/supabase-js';

// Initialize Supabase client with service role key
const supabase = createClient(
  import.meta.env.SUPABASE_URL,
  import.meta.env.SUPABASE_SERVICE_ROLE_KEY
);

// Fetch referrals data from Supabase
const { data: referrals, error: referralError } = await supabase
  .from('referrals')
  .select('*');

if (referralError) {
  console.error('Error fetching referrals:', referralError);
  throw new Error('Failed to fetch data from Supabase');
}

console.log('Referrals:', referrals);

// Fetch subscribers data from ConvertKit
const convertKitApiKey = import.meta.env.CONVERTKIT_API_KEY;
const convertKitFormId = import.meta.env.PUBLIC_CONVERTKIT_FORM_ID;

if (!convertKitApiKey || !convertKitFormId) {
  console.error('Missing ConvertKit API credentials');
  throw new Error('Missing ConvertKit API credentials');
}

const response = await fetch(`https://api.convertkit.com/v3/forms/${convertKitFormId}/subscriptions?api_secret=${convertKitApiKey}`, {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
  }
});

if (!response.ok) {
  console.error('Error fetching subscribers from ConvertKit:', await response.text());
  throw new Error('Failed to fetch data from ConvertKit API');
}

const convertKitData = await response.json();
console.log('Fetched ConvertKit data:', convertKitData);
const subscribers = convertKitData.subscriptions || [];
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6">Test Dashboard</h1>

    <div class="bg-white dark:bg-slate-800 rounded-lg shadow p-6 mb-8">
      <h2 class="text-xl font-semibold mb-4">Referrals</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          {referrals.length > 0 ? (
            <>
              <thead class="bg-gray-50 dark:bg-slate-700">
                <tr>
                  {Object.keys(referrals[0]).map((key) => (
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">{key}</th>
                  ))}
                </tr>
              </thead>
              <tbody class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-gray-700">
                {referrals.map((referral) => (
                  <tr>
                    {Object.values(referral).map((value) => (
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{value}</td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </>
          ) : (
            <p class="text-center py-4 text-gray-500 dark:text-gray-400">No referrals found</p>
          )}
        </table>
      </div>
    </div>

    <div class="bg-white dark:bg-slate-800 rounded-lg shadow p-6">
      <h2 class="text-xl font-semibold mb-4">Subscribers</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          {subscribers.length > 0 ? (
            <>
              <thead class="bg-gray-50 dark:bg-slate-700">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ID</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Email</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">State</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Created At</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Source</th>
                </tr>
              </thead>
              <tbody class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-gray-700">
                {subscribers.map((subscription) => (
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.id}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.subscriber.email_address}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.state}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{new Date(subscription.created_at).toLocaleString()}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{subscription.source}</td>
                  </tr>
                ))}
              </tbody>
            </>
          ) : (
            <p class="text-center py-4 text-gray-500 dark:text-gray-400">No subscribers found</p>
          )}
        </table>
      </div>
    </div>
  </div>
</Layout>
