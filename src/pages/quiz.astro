---
import Layout from '~/layouts/PageLayout.astro';

// --- METADATA ---
const metadata = {
  title: 'Sex 3.0 Relationship Map Quiz | JJ Roberts',
  description: "Take the Sex 3.0 Relationship Map Quiz to understand where you are on your journey and unlock personalised insights.",
};

const quizQuestions = [
  {
    text: "Jealousy in a relationship is a sign of how much you love someone.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "Relationships should be built on complete honesty, even when it's difficult.",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Attitude (Agree=High)
  },
  {
    text: "I believe in the concept of 'The One' in relationships.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "Trust and respect are more important that exclusivity and control in a relationship.",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Attitude (Agree=High)
  },
  {
    text: "A relationship is successful if it lasts a lifetime, regardless of the quality.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low) - Slightly rephrased
  },
  {
    text: "A relationship should be free of conflict to be healthy.",
    scoring: [1, 2, 3, 4, 5],
  },
  {
    text: "You should be willing to tolerate bad behaviour if you love someone.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should complete you as a person.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "I believe society promotes outdated ideas about sexual relationships.",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Awareness (Agree=High) - Rephrased original 17's theme
  },
  {
    text: "You should be willing to sacrifice your happiness for your partner's.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "A relationship requires exclusivity to be fulfilling and meaningful above all else.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low) - Slightly rephrased
  },
  {
    text: "My partner having personal freedom is compatible with deep intimacy in a relationship.",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Attitude (Agree=High) - New question based on book
  },
  {
    text: "A healthy relationship requires effort and hard work.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "I have gut feeling that there is something wrong with the way that society tells me how relationships should be but I can't quite put my finger on it.",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Attitude (Agree=High) - New question based on book
  },
  {
    text: "You should be able to predict your partner's needs without them telling you.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "It is natural for human beings to be monogamous for their entire lives.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "If you truly love someone, you should prioritize their needs above your own and your own dreams.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low) - Combined/rephrased
  },
  {
    text: "A relationship should fulfil all your emotional needs.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  },
  {
    text: "I feel pressured to follow a standard relationship timeline (dating, marriage, kids).",
    scoring: [1, 2, 3, 4, 5], // Sex 3.0 Awareness (Agree=High) - Acknowledging RD
  },
  {
    text: "I like drama in a relationship. It's exciting. Lack of drama is passionless and boring.",
    scoring: [5, 4, 3, 2, 1], // Sex 2.0 Attitude (Agree=Low)
  }
];

// Calculate the result based on the score
const getResult = (score: number): string => {
  if (score <= 40) return 'Mostly Sex 2.0';
  if (score <= 60) return 'Sex 2.0 with Growing Awareness';
  if (score <= 80) return 'Leaning Towards Sex 3.0';
  return 'Mostly Sex 3.0';
};

// Get URL parameters
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const url = new URL(Astro.request.url);

// Handle form submission
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const answers = JSON.parse(formData.get('answers')?.toString() || '[]') as number[];
  
  // Calculate score
  const score = answers.reduce((sum, answer, index) => {
    return sum + (quizQuestions[index]?.scoring[answer - 1] || 0);
  }, 0);
  
  const result = getResult(score);
  
  // Debug output
  console.log('Quiz Submission:');
  console.log('Raw Answers:', answers);
  console.log('Calculated Score:', score);
  console.log('Result Category:', result);
  

}

// Get score from URL if present (used in template)

// --- SCORE RANGES AND RESULTS ---
// Max possible score: 20 questions * 5 points/question = 100
// Min possible score: 20 questions * 1 point/question = 20
// Let's create a few ranges:
// 20-40 (Mostly 2.0), 41-60 (Mixed/Aware), 61-80 (Leaning 3.0), 81-100 (Mostly 3.0)

const scoreRanges = [
  {
    maxScore: 40,
    type: 'Mostly Sex 2.0',
    summary: 'Your score indicates you are largely operating within the traditional Sex 2.0 framework. You likely hold many common societal beliefs about love, relationships, and commitment, which can often lead to unnecessary conflict, jealousy, and confusion. But awareness is the first step to change. The good news is that the blueprint for a better way exists.'
  },
  {
    maxScore: 60,
    type: 'Sex 2.0 with Growing Awareness',
    summary: 'Your responses show a mix of traditional Sex 2.0 beliefs and a growing awareness that something isn\'t quite right with the conventional map. You may feel the friction and frustration caused by outdated paradigms. This position is fertile ground for change! You are ready to explore a new framework that aligns more closely with your true nature and leads to less suffering.'
  },
  {
    maxScore: 80,
    type: 'Leaning Towards Sex 3.0',
    summary: 'You are strongly aligned with the core principles of Sex 3.0! You likely value honesty, freedom, and mutual reward over societal expectations and the need for control. You\'ve probably experienced the limitations of the Sex 2.0 firsthand. You are well on your way to building truly authentic and joyful connections based on a more natural and empowering understanding of human relationships.'
  },
  {
    maxScore: 100, // Represents 81-100
    type: 'Mostly Sex 3.0',
    summary: 'Wow! Your score indicates you already resonate strongly with the Sex 3.0 paradigm. You fundamentally understand that relationships thrive on mutual reward, honesty, trust, and respect, not on outdated notions of ownership or societal pressure. You are likely already navigating relationships with greater clarity and less suffering. You are a pioneer in building connections that are natural, free, and deeply fulfilling.'
  }
];

// Get result summary based on score (used in template)
// This function is used in the template
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function getResultSummary(score: number) {
  for (const range of scoreRanges) {
    if (score <= range.maxScore) {
      return range;
    }
  }
  return scoreRanges[scoreRanges.length - 1]; // Fallback for scores outside expected range
}

// Result will be used in the template
---

<Layout metadata={metadata}>
  <!-- Add quiz questions JSON to DOM -->
  <div id="quiz-questions-json" style="display: none;">{JSON.stringify(quizQuestions)}</div>
  <div class="container mx-auto px-4 py-16 md:py-24">

    <div id="quiz-container" class="max-w-3xl mx-auto bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 md:p-8 lg:p-10">

      <h1 class="text-3xl md:text-4xl font-bold text-center text-brand-green mb-8">Your Relationship Map Quiz</h1>

          {/* Progress Bar and Counter */}
          <div class="mb-8">
            <div class="flex justify-between items-center mb-2">
              <span id="question-counter" class="text-sm font-medium text-orange-500">Answered 0 of 20 questions</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
              <div id="progress-bar" class="bg-orange-500 h-2.5 rounded-full transition-all duration-300 ease-in-out" style="width: 5%"></div>
            </div>
          </div>

      {/* Quiz Form */}
      <form id="quiz-form" class="space-y-8">
        {quizQuestions.map((question, index) => (
          <div class="mb-6 bg-white dark:bg-slate-700 rounded-lg">
            <div class="p-6">
              <p class="text-lg font-medium text-gray-800 dark:text-white mb-4">{index + 1}. {question.text}</p>
            </div>
            <div class="flex justify-between items-center w-full flex-nowrap gap-6">
              {['Strongly Disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly Agree'].map((option, optionIndex) => (
                <div class="flex flex-col items-center">
                  <div class="flex items-center">
                    <input 
                      type="radio"
                      id={`q${index}-opt${optionIndex + 1}`}
                      name={`question-${index}`}
                      value={optionIndex + 1}
                      class="h-4 w-4 text-orange-500 border-gray-300 focus:ring-orange-500 dark:bg-slate-700 dark:border-slate-600"
                      required
                      onclick="updateQuizProgress()"
                    />
                  </div>
                  <label for={`q${index}-opt${optionIndex + 1}`} class="mt-1 text-sm text-center text-gray-700 dark:text-gray-300">
                    {option}
                  </label>
                </div>
              ))}
            </div>
          </div>
        ))}
        
        <div class="mt-8 p-6 bg-orange-50 dark:bg-slate-800 rounded-lg border-l-4 border-orange-500">
          <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-3">Personalize Your Results</h3>
          <p class="text-gray-700 dark:text-gray-300 mb-4">
            We'd love to personalize your experience! Please share your first name so we can tailor your insights and make them more meaningful for you.
          </p>
          <div class="flex flex-col sm:flex-row gap-4 items-start sm:items-end">
            <div class="flex-grow w-full">
              <label for="user-first-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">First Name</label>
              <div class="w-full">
                <input 
                  type="text" 
                  id="user-first-name" 
                  name="firstName"
                  placeholder="Enter your first name" 
                  required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-slate-700 dark:text-white focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                />
                <p id="first-name-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden">Please enter your first name to continue</p>
              </div>
            </div>
            <button 
              id="show-email-form-btn"
              type="button" 
              class="w-full sm:w-auto px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap"
            >
              Calculate My Results
            </button>
          </div>
        </div>
      </form>

      {/* Email Gate Section (Initially hidden) */}
      <div id="email-gate-area" class="hidden text-center">
        <h2 class="text-2xl md:text-3xl font-bold text-gray-800 dark:text-white mb-4">Unlock Your Results!</h2>
        <p id="score-preview" class="text-lg text-gray-700 dark:text-gray-300 mb-6"></p> {/* e.g., "Your score indicates you're leaning..." */}
        <p class="text-lg text-gray-700 dark:text-gray-300 mb-6">Enter your email below to see your personalized Sex 3.0 Relationship Map result and unlock free chapters of the book.</p>

        <form id="quiz-email-form" class="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
          <label for="quiz-email-input" class="sr-only">Email address</label>
          <input
            type="email"
            id="quiz-email-input"
            name="email"
            placeholder="your.email@example.com"
            required
            class="w-full sm:w-auto flex-grow px-4 py-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white/90 dark:bg-gray-800/90 text-gray-900 dark:text-white focus:ring-2 focus:ring-orange-500 focus:outline-none placeholder-gray-500 dark:placeholder-gray-400"
          />
          <button
            type="submit"
            class="px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap"
          >
            See My Results
          </button>
        </form>
         <p id="quiz-form-message" class="text-sm text-gray-600 dark:text-gray-400 mt-4"></p>
      </div>

      {/* Results Section (Initially hidden) */}
      <div id="results-area" class="hidden">
        <h2 id="result-type-heading" class="text-2xl md:text-3xl font-bold text-center text-brand-green mb-4"></h2>
        <p id="result-summary-text" class="text-lg text-gray-800 dark:text-white text-center mb-6"></p>
        <p class="text-base text-gray-700 dark:text-gray-300 text-center italic">Check your email! We've sent you a confirmation link. Once confirmed, you'll receive another email to unlock your free chapters of the book, which will help you continue your journey.</p>
        <div class="mt-8 text-center">
           {/* Optional: Button to go back to homepage or another resource */}
           <a href="/" class="inline-flex items-center justify-center gap-2 px-8 py-3 bg-slate-200 hover:bg-slate-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-gray-800 dark:text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap">
             Back to Homepage
           </a>
        </div>
      </div>

    </div>

  </div>

  <script is:inline>
    // --- Referral Tracking ---
    const queryParams = new URLSearchParams(window.location.search);
    const referrerId = queryParams.get("ref");
    console.log('Referral ID from URL:', referrerId);
    if (referrerId) {
      localStorage.setItem("referrer_id", referrerId);
      console.log('Stored referral ID in localStorage:', referrerId);
    } else {
      console.log('No referral ID found in URL');
    }

    // Automatically check all 'strongly agree' options for testing
    const stronglyAgreeOptions = document.querySelectorAll('input[type="radio"][value="5"]');
    stronglyAgreeOptions.forEach(option => {
      option.checked = true;
    });

    // Update progress based on how many questions have been answered
    function updateQuizProgress() {
      // Count how many questions have been answered
      const answeredQuestions = Array.from(document.querySelectorAll('input[type="radio"]:checked'));
      const uniqueQuestionNames = new Set();
      
      answeredQuestions.forEach(radio => {
        uniqueQuestionNames.add(radio.name);
      });
      
      const answeredCount = uniqueQuestionNames.size;
      const totalQuestions = 20; // Total number of questions
      
      // Update the progress bar
      const progress = (answeredCount / totalQuestions) * 100;
      const progressBar = document.getElementById('progress-bar');
      const questionCounter = document.getElementById('question-counter');
      progressBar.style.width = `${progress}%`;
      questionCounter.textContent = `Answered ${answeredCount} of ${totalQuestions} questions`;
    }

    // Get DOM elements
    const quizForm = document.getElementById('quiz-form');
    const emailGateArea = document.getElementById('email-gate-area');
    const resultsArea = document.getElementById('results-area');
    const scorePreview = document.getElementById('score-preview');
    const quizEmailForm = document.getElementById('quiz-email-form');
    const quizEmailInput = document.getElementById('quiz-email-input');
    const quizFormMessage = document.getElementById('quiz-form-message');
    const userFirstNameInput = document.getElementById('user-first-name');
    const resultTypeHeading = document.getElementById('result-type-heading');
    const resultSummaryText = document.getElementById('result-summary-text');

    // Add event listeners to all radio buttons when DOM is fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Initial update
      updateQuizProgress();
      
      // Add change event listeners to all radio buttons
      document.querySelectorAll('input[type="radio"]').forEach(radio => {
        radio.addEventListener('change', updateQuizProgress);
      });
    });
    
    // Also add direct event listeners to ensure they work immediately
    document.querySelectorAll('input[type="radio"]').forEach(radio => {
      radio.addEventListener('click', updateQuizProgress);
    });

    // Handle show email form button click
    document.getElementById('show-email-form-btn').addEventListener('click', () => {
      // Check if first name is provided
      const firstNameInput = document.getElementById('user-first-name');
      const firstName = firstNameInput.value.trim();
      
      const firstNameError = document.getElementById('first-name-error');
      
      if (!firstName) {
        // Add error styling and show error message
        firstNameInput.classList.add('border-red-500');
        firstNameError.classList.remove('hidden');
        // Scroll to the first name field
        firstNameInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
        // Focus the field
        firstNameInput.focus();
        return;
      } else {
        // Clear any existing error
        firstNameInput.classList.remove('border-red-500');
        firstNameError.classList.add('hidden');
      }
      
      // Store first name in localStorage for persistence
      localStorage.setItem('userFirstName', firstName);
      
      // Check if all questions are answered
      const totalQuestions = 20;
      const answeredQuestions = document.querySelectorAll('input[type="radio"]:checked');
      const uniqueQuestionNames = new Set();
      
      answeredQuestions.forEach(radio => {
        uniqueQuestionNames.add(radio.name);
      });
      
      const answeredCount = uniqueQuestionNames.size;
      
      if (answeredCount < totalQuestions) {
        alert(`Please answer all questions. You've answered ${answeredCount} of ${totalQuestions} questions.`);
        return;
      }
      
      // Calculate score
      const formData = new FormData(quizForm);
      let totalScore = 0;
      
      // Get all form values and calculate score based on the scoring system in the questions array
      const quizQuestions = JSON.parse(document.getElementById('quiz-questions-json').textContent);
      for (let i = 0; i < 20; i++) {
        const value = parseInt(formData.get(`question-${i}`));
        if (!isNaN(value)) {
          // Use the scoring array from the question to determine the score
          totalScore += quizQuestions[i].scoring[value - 1];
        }
      }
      
      // Store score in a global variable for access by email form
      window.quizTotalScore = totalScore;
      
      // Show email gate with score preview
      quizForm.classList.add('hidden');
      emailGateArea.classList.remove('hidden');
      
      // Determine result type based on score
      let resultType = '';
      if (totalScore <= 40) {
        resultType = 'Mostly Sex 2.0';
      } else if (totalScore <= 60) {
        resultType = 'Sex 2.0 with Growing Awareness';
      } else if (totalScore <= 80) {
        resultType = 'Leaning Towards Sex 3.0';
      } else {
        resultType = 'Mostly Sex 3.0';
      }
      
      scorePreview.textContent = `Your score (${totalScore}/100) indicates you are ${resultType}.`;
      
      // Scroll to email gate
      emailGateArea.scrollIntoView({ behavior: 'smooth' });
    });

    // Handle email form submission
    quizEmailForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const email = quizEmailInput.value.trim();
      
      if (!email) {
        quizFormMessage.textContent = 'Please enter a valid email address.';
        quizFormMessage.className = 'text-red-600 dark:text-red-400';
        return;
      }
      
      // Show loading state
      const submitButton = quizEmailForm.querySelector('button[type="submit"]');
      
      const originalButtonText = submitButton.innerHTML;
      submitButton.disabled = true;
      submitButton.innerHTML = 'Processing...';
      
      try {
        // Get the score from the global variable
        const totalScore = window.quizTotalScore;
        
        // Debug output
        console.log('Quiz Results:');
        console.log('Total Score:', totalScore);
        
        // Get the result type from the score preview text
        const scoreText = scorePreview.textContent;
        const resultType = scoreText.match(/you are (.+)\./)[1];
        console.log('Result Type:', resultType);
        
        // FIRST: Immediately show results without waiting for email confirmation
        emailGateArea.classList.add('hidden');
        resultsArea.classList.remove('hidden');
        
        // Set result heading
        resultTypeHeading.textContent = `Your Relationship Map Type: ${resultType}`;
        
        // THEN: Prepare data for submission to Kit email integration
        const formData = new FormData();
        formData.append('email', email);
        formData.append('firstName', userFirstNameInput.value.trim());
        formData.append('score', totalScore.toString());
        formData.append('resultType', resultType);
        
        // Get referral ID from localStorage (already stored when URL parameter was detected)
        const referrerId = localStorage.getItem('referrer_id');
        console.log('Referral ID from localStorage:', referrerId);
        if (referrerId) {
          formData.append('referrer_id', referrerId);
          console.log('Appending referral ID to form data:', referrerId);
        } else {
          console.log('No referral ID found in localStorage');
        }
        
        // Log the form data for debugging
        console.log('Form data being sent:', {
          email,
          firstName: userFirstNameInput.value.trim(),
          score: totalScore,
          resultType
        });
        
        // Ensure first name is included in the form data
        const firstName = userFirstNameInput.value.trim();
        if (firstName) {
          formData.append('first_name', firstName);
        }
        
        // Send data to server in the background (no await)
        fetch('/api/quiz-submit', {
          method: 'POST',
          body: formData
        }).then(response => {
          console.log('Server response:', response.status, response.statusText);
          return response.json();
        }).then(data => {
          console.log('Server response data:', data);
        }).catch(error => {
          console.error('Error sending email:', error);
          // We don't need to show this error to the user since they already have their results
        });
        
        // Set appropriate summary based on result type
        let summary = '';
        if (resultType.includes('Mostly Sex 2.0')) {
          summary = 'Your score indicates you are largely operating within the traditional Sex 2.0 framework. You likely hold many common societal beliefs about love, relationships, and commitment, which can often lead to unnecessary conflict, jealousy, and confusion. But awareness is the first step to change! The good news is that the blueprint for a better way exists.';
        } else if (resultType.includes('Growing Awareness')) {
          summary = 'Your responses show a mix of traditional Sex 2.0 beliefs and a growing awareness that something isn\'t quite right with the conventional map. You may feel the friction and frustration caused by outdated paradigms. This position is fertile ground for change! You are ready to explore a new framework that aligns more closely with your true nature and leads to less suffering.';
        } else if (resultType.includes('Leaning Towards')) {
          summary = 'You are strongly aligned with the core principles of Sex 3.0! You likely value honesty, freedom, and mutual reward over societal expectations and the need for control. You\'ve probably experienced the limitations of the Sex 2.0 map firsthand. You are well on your way to building truly authentic and joyful connections based on a more natural and empowering understanding of human relationships.';
        } else {
          summary = 'Wow! Your score indicates you already resonate strongly with the Sex 3.0 paradigm. You fundamentally understand that relationships thrive on mutual reward, honesty, trust, and respect, not on outdated notions of ownership or societal pressure. You are likely already navigating relationships with greater clarity and less suffering. You are a pioneer in building connections that are natural, free, and deeply fulfilling.';
        }
        
        if (resultSummaryText) {
          resultSummaryText.textContent = summary;
        }
        
        // Scroll to results
        resultsArea.scrollIntoView({ behavior: 'smooth' });
        
      } catch (error) {
        console.error('Error submitting form:', error);
        quizFormMessage.textContent = 'An error occurred. Please try again.';
        quizFormMessage.className = 'text-red-600 dark:text-red-400';
      } finally {
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
      }
    });

    // Initialize progress bar
    updateQuizProgress();
    
    // Clear error state when typing in first name
    const firstNameInput = document.getElementById('user-first-name');
    const firstNameError = document.getElementById('first-name-error');
    
    firstNameInput?.addEventListener('input', () => {
      firstNameInput.classList.remove('border-red-500');
      firstNameError?.classList.add('hidden');
    });
    
    // Load saved first name if available
    const savedName = localStorage.getItem('userFirstName');
    if (savedName) {
      firstNameInput.value = savedName;
    }
  </script>
</Layout>
