---
import Layout from '~/layouts/PageLayout.astro';
import { Icon } from 'astro-icon/components';

// --- METADATA ---
const metadata = {
  title: 'Sex 3.0 Relationship Map Quiz | JJ Roberts',
  description: "Take the Sex 3.0 Relationship Map Quiz to understand where you are on your journey and unlock personalized insights.",
};

// --- QUIZ DATA ---
interface Question {
  text: string;
  scoring: number[];
}

interface QuizResult {
  range: [number, number];
  title: string;
  description: string;
  color: string;
}

const quizQuestions: Question[] = [
  {
    text: "Jealousy in a relationship is a sign of how much you love someone.",
    scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
  },
  {
    text: "A healthy relationship requires constant effort and hard 'work'.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "The concept of 'The One' is a realistic ideal for finding a life partner.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "It is natural for human beings to be monogamous for their entire lives.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "Love should be unconditional in a committed relationship.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship is successful if it lasts a lifetime.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "Compromise is essential for a healthy relationship.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should share everything with your partner.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should complete you as a person.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should be willing to sacrifice your happiness for your partner's.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship requires exclusivity to be meaningful.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "If you truly love someone, you should be willing to change for them.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should be your top priority in life.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should be able to predict your partner's needs without them telling you.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should be effortless if it's with the right person.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should always put your partner's needs before your own.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should fulfill all your emotional needs.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should be willing to give up your dreams for your relationship.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "A relationship should be free of conflict to be healthy.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "You should be willing to tolerate bad behavior if you love someone.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "Society's expectations significantly influence my relationship choices.",
    scoring: [1, 2, 3, 4, 5],
  },
  {
    text: "I believe in the concept of 'soulmates' or 'the one'.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "Jealousy is a natural and healthy part of love.",
    scoring: [5, 4, 3, 2, 1],
  },
  {
    text: "Relationships should be built on complete honesty, even when it's difficult.",
    scoring: [1, 2, 3, 4, 5],
  },
  {
    text: "Mutual reward is the fundamental basis of any relationship.",
    scoring: [1, 2, 3, 4, 5],
  }
];

// Results interpretation
const results: QuizResult[] = [
  {
    range: [0, 25],
    title: 'Relationship 3.0 Thinker',
    description: 'You have a modern, evolved perspective on relationships that aligns with Sex 3.0 principles. You value freedom, honesty, and mutual growth in your connections.',
    color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
  },
  {
    range: [26, 50],
    title: 'Transitioning to 3.0',
    description: 'You\'re questioning traditional relationship norms and moving toward a more liberated approach. You understand many Sex 3.0 concepts but may still hold some conventional beliefs.',
    color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
  },
  {
    range: [51, 75],
    title: 'Balanced Perspective',
    description: 'You have a mix of traditional and modern views on relationships. You see value in both conventional relationship structures and more liberated approaches.',
    color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
  },
  {
    range: [76, 100],
    title: 'Traditional Relationship Thinker',
    description: 'Your views align with conventional relationship norms. You might find value in exploring alternative perspectives that could lead to more freedom and fulfillment in your connections.',
    color: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',
  },
];

// Calculate the result based on the score
const getResult = (score: number): QuizResult | undefined => {
  const percentage = (score / (quizQuestions.length * 5)) * 100;
  return results.find(r => percentage >= r.range[0] && percentage <= r.range[1]);
};



// Get URL parameters
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const url = new URL(Astro.request.url);

// Handle form submission
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const email = formData.get('email');
  const answers = JSON.parse(formData.get('answers')?.toString() || '[]') as number[];
  
  // Calculate score
  const score = answers.reduce((sum, answer, index) => {
    return sum + (quizQuestions[index]?.scoring[answer - 1] || 0);
  }, 0);
  
  const result = getResult(score);
  
  try {
    // Here you would typically send this data to your email service
    // For example, using a serverless function or API endpoint
    // This is a placeholder for the actual implementation
    const response = await fetch('https://your-email-service.com/api/subscribe', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email, answers, score, result })
    });
    
    if (!response.ok) throw new Error('Failed to submit form');
    
    // Redirect with success state
    return Astro.redirect(`/quiz?email_submitted=true&score=${score}`);
  } catch (error) {
    console.error('Error submitting form:', error);
    return Astro.redirect('/quiz?error=submission_failed');
  }
}

// Get score from URL if present (used in template)

// --- SCORE RANGES AND RESULTS ---
// Max possible score: 20 questions * 5 points/question = 100
// Min possible score: 20 questions * 1 point/question = 20
// Let's create a few ranges:
// 20-40 (Mostly 2.0), 41-60 (Mixed/Aware), 61-80 (Leaning 3.0), 81-100 (Mostly 3.0)

const scoreRanges = [
  {
    maxScore: 40,
    type: 'Mostly Sex 2.0',
    summary: 'Your score indicates you are largely operating within the traditional Sex 2.0 framework. You likely hold many common societal beliefs about love, relationships, and commitment, which can often lead to unnecessary conflict, jealousy, and confusion. But awareness is the first step to change. The good news is that the blueprint for a better way exists.'
  },
  {
    maxScore: 60,
    type: 'Sex 2.0 with Growing Awareness',
    summary: 'Your responses show a mix of traditional Sex 2.0 beliefs and a growing awareness that something isn\'t quite right with the conventional map. You may feel the friction and frustration caused by outdated paradigms. This position is fertile ground for change! You are ready to explore a new framework that aligns more closely with your true nature and leads to less suffering.'
  },
  {
    maxScore: 80,
    type: 'Leaning Towards Sex 3.0',
    summary: 'You are strongly aligned with the core principles of Sex 3.0! You likely value honesty, freedom, and mutual reward over societal expectations and the need for control. You\'ve probably experienced the limitations of the Sex 2.0 firsthand. You are well on your way to building truly authentic and joyful connections based on a more natural and empowering understanding of human relationships.'
  },
  {
    maxScore: 100, // Represents 81-100
    type: 'Mostly Sex 3.0',
    summary: 'Wow! Your score indicates you already resonate strongly with the Sex 3.0 paradigm. You fundamentally understand that relationships thrive on mutual reward, honesty, trust, and respect, not on outdated notions of ownership or societal pressure. You are likely already navigating relationships with greater clarity and less suffering. You are a pioneer in building connections that are natural, free, and deeply fulfilling.'
  }
];

// Get result summary based on score (used in template)
// This function is used in the template
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function getResultSummary(score: number) {
  for (const range of scoreRanges) {
    if (score <= range.maxScore) {
      return range;
    }
  }
  return scoreRanges[scoreRanges.length - 1]; // Fallback for scores outside expected range
}

// Result will be used in the template
---

<Layout metadata={metadata}>
  <div class="container mx-auto px-4 py-16 md:py-24">

    <div id="quiz-container" class="max-w-3xl mx-auto bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 md:p-8 lg:p-10">

      <h1 class="text-3xl md:text-4xl font-bold text-center text-brand-green mb-8">Your Relationship Map Quiz</h1>

      {/* Progress Bar and Counter */}
      <div class="mb-8">
        <div class="flex justify-between items-center mb-2">
          <span id="question-counter" class="text-sm font-medium text-brand-orange">Question 1 of 20</span>
          <span id="page-indicator" class="text-sm font-medium text-gray-500">Page 1 of 2</span>
        </div>
        <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
          <div id="progress-bar" class="bg-brand-orange h-2.5 rounded-full transition-all duration-300 ease-in-out" style="width: 5%"></div>
        </div>
      </div>

      {/* Question Area */}
      <div id="question-area">
        <div id="questions-container">
          <!-- Questions will be generated here by JavaScript -->
        </div>
        <p id="answer-message" class="text-red-600 dark:text-red-400 mt-4 text-center"></p>
        <div class="mt-8 flex justify-between">
          <button id="prev-button" class="inline-flex items-center justify-center gap-2 px-6 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap">
            <Icon name="tabler:arrow-left" class="w-5 h-5" />
            Previous
          </button>
          <button id="next-button" class="inline-flex items-center justify-center gap-2 px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap">
            Next
            <Icon name="tabler:arrow-right" class="w-5 h-5" />
          </button>
        </div>
      </div>

      {/* Email Gate Section (Initially hidden) */}
      <div id="email-gate-area" class="hidden text-center">
        <h2 class="text-2xl md:text-3xl font-bold text-gray-800 dark:text-white mb-4">Unlock Your Results!</h2>
        <p id="score-preview" class="text-lg text-gray-700 dark:text-gray-300 mb-6"></p> {/* e.g., "Your score indicates you're leaning..." */}
        <p class="text-lg text-gray-700 dark:text-gray-300 mb-6">Enter your email below to see your personalized Sex 3.0 Relationship Map result and unlock free chapters of the book.</p>

        <form id="quiz-email-form" class="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
          <label for="quiz-email-input" class="sr-only">Email address</label>
          <input
            type="email"
            id="quiz-email-input"
            name="email"
            placeholder="your.email@example.com"
            required
            class="w-full sm:w-auto flex-grow px-4 py-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white/90 dark:bg-gray-800/90 text-gray-900 dark:text-white focus:ring-2 focus:ring-orange-500 focus:outline-none placeholder-gray-500 dark:placeholder-gray-400"
          />
          <button
            type="submit"
            class="px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap"
          >
            See My Results
          </button>
        </form>
         <p id="quiz-form-message" class="text-sm text-gray-600 dark:text-gray-400 mt-4"></p>
      </div>

      {/* Results Section (Initially hidden) */}
      <div id="results-area" class="hidden">
        <h2 id="result-type-heading" class="text-2xl md:text-3xl font-bold text-center text-brand-green mb-4"></h2>
        <p id="result-summary-text" class="text-lg text-gray-800 dark:text-white text-center mb-6"></p>
        <p class="text-base text-gray-700 dark:text-gray-300 text-center italic">Check your email! We've sent you a confirmation link. Once confirmed, you'll receive another email to unlock your free chapters of the book, which will help you continue your journey.</p>
        <div class="mt-8 text-center">
           {/* Optional: Button to go back to homepage or another resource */}
           <a href="/" class="inline-flex items-center justify-center gap-2 px-8 py-3 bg-slate-200 hover:bg-slate-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-gray-800 dark:text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap">
             Back to Homepage
             <Icon name="tabler:home" class="w-5 h-5 md:w-6 md:h-6" />
           </a>
        </div>
      </div>

    </div>

  </div>

  <script is:inline>
    const questions = [
      {
        text: "Jealousy in a relationship is a sign of how much you love someone.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "A healthy relationship requires constant effort and hard 'work'.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "The concept of 'The One' is a realistic ideal for finding a life partner.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "It is natural for human beings to be monogamous for their entire lives.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
       {
        text: "Society's expectations significantly influence my relationship choices.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Awareness)
      },
      {
        text: "Relationships should be built on complete honesty, even when it's difficult.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
      {
        text: "Mutual reward is the fundamental basis of any relationship.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
      {
        text: "It's possible to have a fulfilling relationship that is not based on sexual exclusivity.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
       {
        text: "Fear of losing my partner's sexual attention drives my feelings of insecurity.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "Open communication is essential for a healthy connection.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
       {
        text: "I believe society's view of relationships is often outdated.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Awareness)
      },
      {
        text: "It's okay to prioritize personal freedom within a committed relationship.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
      {
        text: "Possessiveness is a healthy expression of caring deeply for someone.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "My sense of reality about relationships might be different from actual reality.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Awareness)
      },
      {
        text: "Nagging or complaints in a relationship usually indicate unmet deeper needs.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
       {
        text: "I feel pressured to follow a standard relationship timeline (dating, marriage, kids).",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Experiencing RD)
      },
      {
        text: "Trust is the foundation, not exclusivity or control.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      },
      {
        text: "I find it difficult to remain friends with an ex after a romantic relationship ends.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
       {
        text: "My happiness depends on finding 'the right person' to complete me.",
        scoring: [5, 4, 3, 2, 1], // 1-5 maps to 5-1 points (Sex 2.0)
      },
      {
        text: "Sexual relationships can be easy and self-sustaining, not always a struggle.",
        scoring: [1, 2, 3, 4, 5], // 1-5 maps to 1-5 points (Sex 3.0)
      }
    ];

    const scoreResults = [
      { maxScore: 40, type: 'Mostly Sex 2.0', summary: 'Your score indicates you are largely operating within the traditional Sex 2.0 framework. You likely hold many common societal beliefs about love, relationships, and commitment, which can often lead to unnecessary conflict, jealousy, and confusion. But awareness is the first step to change! The good news is that the blueprint for a better way exists.' },
      { maxScore: 60, type: 'Sex 2.0 with Growing Awareness', summary: 'Your responses show a mix of traditional Sex 2.0 beliefs and a growing awareness that something isn\'t quite right with the conventional map. You may feel the friction and frustration caused by outdated paradigms. This position is fertile ground for change! You are ready to explore a new framework that aligns more closely with your true nature and leads to less suffering.' },
      { maxScore: 80, type: 'Leaning Towards Sex 3.0', summary: 'You are strongly aligned with the core principles of Sex 3.0! You likely value honesty, freedom, and mutual reward over societal expectations and the need for control. You\'ve probably experienced the limitations of the Sex 2.0 map firsthand. You are well on your way to building truly authentic and joyful connections based on a more natural and empowering understanding of human relationships.' },
      { maxScore: 100, type: 'Mostly Sex 3.0', summary: 'Wow! Your score indicates you already resonate strongly with the Sex 3.0 paradigm. You fundamentally understand that relationships thrive on mutual reward, honesty, trust, and respect, not on outdated notions of ownership or societal pressure. You are likely already navigating relationships with greater clarity and less suffering. You are a pioneer in building connections that are natural, free, and deeply fulfilling.' },
    ];

    let currentPage = 0;
    const questionsPerPage = 10;
    let totalScore = 0;
    const userAnswers = new Array(questions.length).fill(null); // Store all answers

    // Get DOM elements
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const quizContainer = document.getElementById('quiz-container');
    const progressBar = document.getElementById('progress-bar');
    const questionArea = document.getElementById('question-area');
    const questionsContainer = document.getElementById('questions-container');
    const prevButton = document.getElementById('prev-button');
    const nextButton = document.getElementById('next-button');
    const answerMessage = document.getElementById('answer-message');
    const questionCounter = document.getElementById('question-counter');
    const pageIndicator = document.getElementById('page-indicator');

    const emailGateArea = document.getElementById('email-gate-area');
    const scorePreview = document.getElementById('score-preview');
    const quizEmailForm = document.getElementById('quiz-email-form');
    const quizEmailInput = document.getElementById('quiz-email-input');
    const quizFormMessage = document.getElementById('quiz-form-message');

    const resultsArea = document.getElementById('results-area');
    const resultTypeHeading = document.getElementById('result-type-heading');
    const resultSummaryText = document.getElementById('result-summary-text');


    function updateProgress() {
      const answeredQuestions = userAnswers.filter(a => a !== null).length;
      const progress = (answeredQuestions / questions.length) * 100;
      progressBar.style.width = `${progress}%`;
      questionCounter.textContent = `Answered ${answeredQuestions} of ${questions.length} questions`;
      
      // Update navigation buttons
      const isFirstPage = currentPage === 0;
      const isLastPage = currentPage === Math.ceil(questions.length / questionsPerPage) - 1;
      
      prevButton.style.display = isFirstPage ? 'none' : 'flex';
      nextButton.textContent = isLastPage ? 'Submit' : 'Next';
      pageIndicator.textContent = `Page ${currentPage + 1} of ${Math.ceil(questions.length / questionsPerPage)}`;
    }

    function scrollToTop() {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    }

    function renderQuestions() {
      questionsContainer.innerHTML = '';
      const startIndex = currentPage * questionsPerPage;
      const endIndex = Math.min(startIndex + questionsPerPage, questions.length);
      
      // Scroll to top when questions change
      scrollToTop();
      
      for (let i = startIndex; i < endIndex; i++) {
        const question = questions[i];
        const questionDiv = document.createElement('div');
        questionDiv.className = 'mb-8 p-6 bg-white dark:bg-slate-700 rounded-lg shadow';
        
        const options = [
          { value: 1, label: 'Strongly Disagree' },
          { value: 2, label: 'Disagree' },
          { value: 3, label: 'Neutral' },
          { value: 4, label: 'Agree' },
          { value: 5, label: 'Strongly Agree' }
        ];
        
        const optionsHtml = options.map(option => `
          <div class="flex flex-col items-center px-2">
            <div class="flex items-center h-10">
              <input 
                type="radio"
                id="q${i}-opt${option.value}"
                name="question-${i}"
                value="${option.value}"
                class="h-4 w-4 text-orange-500 border-gray-300 focus:ring-orange-500 dark:bg-slate-700 dark:border-slate-600"
                ${userAnswers[i] === option.value ? 'checked' : ''}
              >
            </div>
            <label for="q${i}-opt${option.value}" class="mt-1 text-xs text-center text-gray-700 dark:text-gray-300 whitespace-nowrap">
              ${option.label}
            </label>
          </div>
        `).join('');
        
        questionDiv.innerHTML = `
          <p class="text-lg font-medium text-gray-800 dark:text-white mb-4">${i + 1}. ${question.text}</p>
          <div class="flex justify-between items-start px-2">
            ${optionsHtml}
          </div>
        `;
        
        // Add event listeners for radio buttons
        const radioButtons = questionDiv.querySelectorAll('input[type="radio"]');
        radioButtons.forEach(radio => {
          radio.addEventListener('change', (e) => {
            const value = parseInt(e.target.value);
            userAnswers[i] = value;
            updateProgress();
          });
        });
        
        questionsContainer.appendChild(questionDiv);
      }
      
      updateProgress();
    }
    


    // Calculate score based on selected answers
    function calculateScore() {
      let score = 0;
      userAnswers.forEach((answer, index) => {
        if (answer !== null) {
          const points = questions[index].scoring[answer - 1];
          score += points;
        }
      });
      return score;
    }

    function showEmailGate() {
       // Hide question area
       questionArea.classList.add('hidden');

       // Show email gate area
       emailGateArea.classList.remove('hidden');

       // Set score preview text with the actual score
       const result = getResultSummary(totalScore);
       scorePreview.textContent = `Your score (${totalScore}/100) indicates you are ${result.type}.`;
       
       // Scroll to email gate
       emailGateArea.scrollIntoView({ behavior: 'smooth' });
    } 

    function getResultSummary(score) {
      for (const range of scoreResults) {
        if (score <= range.maxScore) {
          return range;
        }
      }
      return scoreResults[scoreResults.length - 1]; // Fallback for max score
    }


    function showResults(score) {
      // Hide email gate area
      emailGateArea.classList.add('hidden');

      // Show results area
      resultsArea.classList.remove('hidden');

      const result = getResultSummary(score);
      resultTypeHeading.textContent = `Your Relationship Map Type: ${result.type}`;
      resultSummaryText.textContent = result.summary;
    }

    // Event Listeners for navigation
    nextButton.addEventListener('click', () => {
      const startIndex = currentPage * questionsPerPage;
      const endIndex = Math.min(startIndex + questionsPerPage, questions.length);
      
      // Check if all questions on current page are answered
      const currentPageAnswers = userAnswers.slice(startIndex, endIndex);
      if (currentPageAnswers.some(a => a === null)) {
        answerMessage.textContent = 'Please answer all questions before continuing.';
        return;
      }
      
      answerMessage.textContent = '';
      
      if (currentPage < Math.ceil(questions.length / questionsPerPage) - 1) {
        // Go to next page
        currentPage++;
        renderQuestions();
      } else {
        // Submit quiz
        totalScore = calculateScore();
        showEmailGate();
      }
    });

    // Previous button event listener
    prevButton.addEventListener('click', () => {
      if (currentPage > 0) {
        currentPage--;
        renderQuestions();
      }
    });

    // Email form submission
    quizEmailForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const email = quizEmailInput.value.trim();
      
      if (!email) {
        quizFormMessage.textContent = 'Please enter a valid email address.';
        quizFormMessage.className = 'text-red-600 dark:text-red-400';
        return;
      }
      
      // Show loading state
      const submitButton = quizEmailForm.querySelector('button[type="submit"]');
      const originalButtonText = submitButton.innerHTML;
      submitButton.disabled = true;
      submitButton.innerHTML = 'Processing...';
      
      try {
        // Here you would typically send the data to your server
        // For now, we'll just show the results
        showResults(totalScore);
        
        // Scroll to results
        resultsArea.scrollIntoView({ behavior: 'smooth' });
        
      } catch (error) {
        console.error('Error submitting form:', error);
        quizFormMessage.textContent = 'An error occurred. Please try again.';
        quizFormMessage.className = 'text-red-600 dark:text-red-400';
      } finally {
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
      }
    });

    // Initialize the quiz
    updateProgress(); // Set initial button states
    renderQuestions();
  </script>
</Layout>
