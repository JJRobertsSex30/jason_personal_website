---
import { Image } from 'astro:assets';

// VERIFY THIS PATH AND FILENAME MATCH YOUR ACTUAL IMAGE FILE
import heroBgImage from '~/assets/images/jj.jpg';

// Define overlay color and opacity here for easy modification
const overlayColor = 'bg-gray-900';
const overlayOpacity = 'opacity-60';
---
<section class="relative overflow-hidden py-24 md:py-32">

  {/* Background Image */}
  <Image
    src={heroBgImage}
    alt="JJ Roberts"
    width={1920}
    height={1080}
    format="webp"
    quality={75}
    loading="eager"
    class="absolute inset-0 w-full h-full object-cover -z-20"
  />

  {/* Dark Overlay */}
  <div class=`absolute inset-0 w-full h-full ${overlayColor} ${overlayOpacity} -z-10`></div>

  {/* Content Container */}
  <div class="container mx-auto px-4 relative z-10 text-center">

    {/* Headline & Form */}
    <div class="max-w-3xl mx-auto">
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight drop-shadow-md">
        Upgrade Your Love Life
      </h1>
      <p class="text-lg text-gray-200 mb-8 drop-shadow-sm">
        Uncover society's dirty little secret which causes relationships to fail. Then, learn the principles to take your connections to a brand new level.</p>
      {/* Basic Form */}
      <form id="hero-page-form" class="flex flex-col sm:flex-row gap-4 justify-center max-w-xl mx-auto">
        <label for="hero-email-bg" class="sr-only">Email address</label>
        <input
          type="email"
          id="hero-email-bg"
          name="email"
          placeholder="your.email@example.com"
          required
          class="w-full sm:w-auto flex-grow px-4 py-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white/90 dark:bg-gray-800/90 text-gray-900 dark:text-white focus:ring-2 focus:ring-orange-500 focus:outline-none placeholder-gray-500 dark:placeholder-gray-400"
        />
        <button
          type="submit"
          class="px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap"
        >
          Get Started Now
        </button>
      </form>
      {/* Added message area */}
      <p id="hero-page-form-message" class="text-sm text-gray-300 mt-4 drop-shadow-sm"></p>
    </div>

  </div>
</section>

---
<script>
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('hero-page-form') as HTMLFormElement | null;
      const emailInput = document.getElementById('hero-email-bg') as HTMLInputElement | null;
      const message = document.getElementById('hero-page-form-message') as HTMLParagraphElement | null;
      const submitBtn = form ? form.querySelector('button[type="submit"]') as HTMLButtonElement | null : null;
      if (form && emailInput && message && submitBtn) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          const email = emailInput.value.trim();
          // Simple email validation
          const valid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
          if (!valid) {
            message.textContent = 'Please enter a valid email address.';
            message.style.color = '#f87171'; // red-400
            return;
          }
          message.textContent = 'Submitting...';
          message.style.color = '#fbbf24'; // amber-400
          submitBtn.disabled = true;
submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
          try {
            const res = await fetch('/api/subscribe', {
              method: 'POST',
              headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
              body: new URLSearchParams({ email })
            });
            const data = await res.json();
            if (res.ok) {
              message.textContent = 'You are now a member of the inner circle. Please check your email.';
              message.style.color = '#34d399'; // green-400
              form.reset();
            } else {
              message.textContent = data.message || 'Subscription failed. Please try again.';
              message.style.color = '#f87171'; // red-400
            }
          } catch {

            message.textContent = 'Network error. Please try again.';
            message.style.color = '#f87171'; // red-400
          } finally {
            submitBtn.disabled = false;
submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
          }
        });
      }
    });
  }
</script>