---
import type { UserProfile } from '~/types';

export interface Props {
  userProfiles: UserProfile[];
}

const { userProfiles } = Astro.props;

const summaryStats = {
  totalUsers: userProfiles?.length || 0,
  newToday:
    userProfiles?.filter(
      (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString()
    ).length || 0,
  verified: userProfiles?.filter((p) => p.kit_state === 'active').length || 0,
};

const statusMap: Record<string, { text: string; color: string }> = {
  active: { text: 'Confirmed', color: 'bg-green-100 dark:bg-green-400/30 text-green-600 dark:text-green-300' },
  unconfirmed: {
    text: 'Unconfirmed',
    color: 'bg-yellow-100 dark:bg-yellow-400/30 text-yellow-600 dark:text-yellow-300',
  },
  cancelled: { text: 'Cancelled', color: 'bg-gray-100 dark:bg-gray-400/30 text-gray-500 dark:text-gray-300' },
  complained: {
    text: 'Complained',
    color: 'bg-orange-100 dark:bg-orange-400/30 text-orange-600 dark:text-orange-300',
  },
  bounced: { text: 'Bounced', color: 'bg-red-100 dark:bg-red-400/30 text-red-600 dark:text-red-300' },
  blocked: { text: 'Blocked', color: 'bg-red-100 dark:bg-red-400/30 text-red-600 dark:text-red-300' },
  cold: { text: 'Cold', color: 'bg-blue-100 dark:bg-blue-400/30 text-blue-600 dark:text-blue-300' },
  unknown: { text: 'Unknown', color: 'bg-purple-100 dark:bg-purple-400/30 text-purple-600 dark:text-purple-300' },
};

---
<section class="my-8">
  <h2 class="text-3xl font-semibold mb-8 text-slate-800 dark:text-white text-center">User Management</h2>

  <!-- Summary Cards -->
  <div class="mb-10 grid grid-cols-1 md:grid-cols-3 gap-6">
    <div class="p-6 bg-white dark:bg-slate-800 shadow-xl rounded-lg text-center">
      <p class="text-4xl font-bold text-blue-600 dark:text-blue-400">{summaryStats.totalUsers}</p>
      <p class="text-sm font-medium text-slate-600 dark:text-slate-300">Total Users</p>
    </div>
    <div class="p-6 bg-white dark:bg-slate-800 shadow-xl rounded-lg text-center">
      <p class="text-4xl font-bold text-green-600 dark:text-green-400">+{summaryStats.newToday}</p>
      <p class="text-sm font-medium text-slate-600 dark:text-slate-300">New Today</p>
    </div>
    <div class="p-6 bg-white dark:bg-slate-800 shadow-xl rounded-lg text-center">
      <p class="text-4xl font-bold text-indigo-600 dark:text-indigo-400">{summaryStats.verified}</p>
      <p class="text-sm font-medium text-slate-600 dark:text-slate-300">Confirmed</p>
    </div>
  </div>

  <div class="bg-white dark:bg-slate-800 shadow-xl rounded-lg p-6">
    <div class="flex justify-between items-center mb-6">
      <h3 class="text-2xl font-semibold text-slate-700 dark:text-slate-200">All Users</h3>
      <div>
        <label for="status-filter" class="block text-sm font-medium text-slate-700 dark:text-slate-300 sr-only"
          >Filter users</label
        >
        <select
          id="status-filter"
          name="status-filter"
          class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md dark:bg-slate-700 dark:border-slate-600 dark:text-white"
        >
          <option value="all">All Users</option>
          <option value="active" selected>Confirmed</option>
          <option value="unconfirmed">Unconfirmed</option>
          <option value="cancelled">Cancelled</option>
          <option value="complained">Complained</option>
          <option value="bounced">Bounced</option>
          <option value="blocked">Blocked</option>
          <option value="cold">Cold</option>
        </select>
      </div>
    </div>
    {
      userProfiles && userProfiles.length > 0 ? (
        <div class="overflow-x-auto">
          <table id="users-table" class="min-w-full divide-y divide-slate-200 dark:divide-slate-700">
            <thead class="bg-slate-50 dark:bg-slate-700/50">
              <tr>
                <th
                  scope="col"
                  class="px-6 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-300 uppercase tracking-wider"
                >
                  Email
                </th>
                <th
                  scope="col"
                  class="px-6 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-300 uppercase tracking-wider"
                >
                  Status
                </th>
                <th
                  scope="col"
                  class="px-6 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-300 uppercase tracking-wider"
                >
                  Created At
                </th>
                <th
                  scope="col"
                  class="px-6 py-3 text-right text-xs font-medium text-slate-500 dark:text-slate-300 uppercase tracking-wider"
                >
                  Actions
                </th>
              </tr>
            </thead>
            <tbody id="user-list" class="bg-white dark:bg-slate-800 divide-y divide-slate-200 dark:divide-slate-700">
              {userProfiles.map((profile) => {
                const statusKey = profile.kit_state || 'unknown';
                const statusInfo = statusMap[statusKey] || statusMap['unknown'];
                const profileId = profile.id.startsWith('kit-') && profile.email ? `ck-email-${btoa(profile.email)}` : profile.id;

                return (
                  <tr data-state={statusKey} data-href={`/dashboard/user/${profileId}`} class="user-row cursor-pointer hover:bg-slate-50 dark:hover:bg-slate-700/50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-slate-900 dark:text-slate-100">
                      {profile.email}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">
                      <div
                        class:list={[
                          'text-xs inline-flex font-medium rounded-full text-center px-2.5 py-1',
                          statusInfo.color,
                        ]}
                      >
                        {statusInfo.text}
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">
                      {profile.created_at ? new Date(profile.created_at).toLocaleDateString() : 'N/A'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                      <button
                        data-action="open-delete-user-modal"
                        data-user-id={profile.id}
                        data-user-email={profile.email}
                        class="delete-user-btn text-slate-500 hover:text-red-600 dark:text-slate-400 dark:hover:text-red-500 p-1.5 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-red-500"
                        title="Delete User"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 pointer-events-none" viewBox="0 0 20 20" fill="currentColor">
                          <path
                            fill-rule="evenodd"
                            d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                            clip-rule="evenodd"
                          />
                        </svg>
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      ) : (
        <div class="text-center py-8 px-4 border border-dashed border-slate-300 dark:border-slate-600 rounded-lg">
          <svg
            class="mx-auto h-10 w-10 text-slate-400 dark:text-slate-500"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              vector-effect="non-scaling-stroke"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1.5"
              d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
            />
          </svg>
          <h3 class="mt-2 text-md font-medium text-slate-700 dark:text-slate-200">No User Profiles Found</h3>
          <p class="mt-1 text-sm text-slate-500 dark:text-slate-400">There are currently no user profiles in the database.</p>
        </div>
      )
    }
  </div>
</section>

<script>
  document.addEventListener('astro:page-load', () => {
    // Status Filter Logic
    const filter = document.getElementById('status-filter') as HTMLSelectElement;
    const tableBody = document.getElementById('user-list');

    if (filter && tableBody) {
      const allRows = Array.from(tableBody.querySelectorAll('tr[data-state]')) as HTMLElement[];

      const applyFilter = () => {
        const selectedStatus = filter.value;
        allRows.forEach((row) => {
          const userState = row.dataset.state;
          if (selectedStatus === 'all' || userState === selectedStatus) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      };
      filter.addEventListener('change', applyFilter);
      applyFilter();
    }

    // Row click navigation
    const userRows = document.querySelectorAll('.user-row');
    userRows.forEach(row => {
      row.addEventListener('click', (e) => {
        const target = e.target as Element;
        // Do not navigate if the delete button or its SVG icon is clicked
        if (target.closest('.delete-user-btn')) {
          return;
        }
        
        const href = (row as HTMLElement).dataset.href;
        if (href) {
          window.location.href = href;
        }
      });
    });
  });
</script>