---
// Component for the DB Visualizer Tab on the Dashboard
import DbVisualizerClient from './DbVisualizerClient';
---

<div id="db-visualizer-panel-content" class="tab-panel p-4 bg-white dark:bg-gray-800 rounded-lg shadow-md mt-4">
  <div class="mb-6 flex items-start justify-between gap-4">
    <div class="flex-grow">
      <h2 class="text-2xl font-bold text-slate-800 dark:text-white mb-2">Database Visualizer</h2>
      <p class="text-slate-600 dark:text-slate-400 max-w-prose">
        An interactive diagram of your database schema. If the visual is missing or outdated, scan the database to regenerate it.
      </p>
    </div>
    <div class="flex-shrink-0">
      <button
        type="button"
        id="scan-db-btn"
        class="rounded-md bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm transition-colors hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-slate-900"
      >
        Scan Database Schema
      </button>
    </div>
  </div>
  
  <div id="visualizer-container-wrapper" style="height: 600px; width: 100%;" class="relative rounded-lg border border-gray-200 bg-gray-50/50 dark:border-gray-700 dark:bg-gray-800/50">
    <DbVisualizerClient client:idle />
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const scanButton = document.getElementById('scan-db-btn') as HTMLButtonElement | null;
    
    scanButton?.addEventListener('click', async () => {
      scanButton.disabled = true;
      scanButton.textContent = 'Scanning...';

      try {
        const response = await fetch('/api/db/scan', { method: 'POST' });
        const result = await response.json();

        if (!response.ok) {
          throw new Error(result.message || 'An unknown error occurred.');
        }

        alert('Database scan successful! The visualizer will now reload.');
        // Dispatch a custom event to tell the visualizer to reload its data
        document.dispatchEvent(new CustomEvent('db-schema-loaded'));

      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        console.error('Scan failed:', errorMessage);
        alert(`Database scan failed: ${errorMessage}`);
      } finally {
        scanButton.disabled = false;
        scanButton.textContent = 'Scan Database Schema';
      }
    });
  });
</script> 