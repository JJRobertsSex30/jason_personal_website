---

import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import type { MediaResource } from '~/types';


import initializeResourceSwiperScriptURL from '../../scripts/initializeResourceSwiper.ts?url';

export interface Props {
  id?: string;
  headline?: string;
  subheadline?: string;
  items: MediaResource[];
  viewAllLink?: string;
  viewAllText?: string;
  classes?: { container?: string; headlineContainer?: string; swiperContainer?: string; };
  slidesPerView?: number | 'auto';
  mdSlidesPerView?: number | 'auto';
  lgSlidesPerView?: number | 'auto';
  spaceBetween?: number;
  loop?: boolean;
}

const {
  id,
  headline = "Explore Our Resources",
  subheadline,
  items,
  viewAllLink,
  viewAllText = "View All Resources",
  classes = {},
  slidesPerView = 1.2,
  mdSlidesPerView = 2.3,
  lgSlidesPerView = 3.3,
  spaceBetween = 16,
  loop = false,
} = Astro.props;

const componentIdBase = id ?? `swipercomp-${Math.random().toString(36).substring(7)}`;
const uniqueSuffix = componentIdBase.replace(/[^a-zA-Z0-9-_]/g, '');


const swiperContainerClass = `resource-swiper-${uniqueSuffix}`; 
const swiperPaginationClass = `rs-pagination-${uniqueSuffix}`;
const swiperNextElClass = `rs-button-next-${uniqueSuffix}`;
const swiperPrevElClass = `rs-button-prev-${uniqueSuffix}`;

const getIconNameForType = (typeValue: MediaResource['type'] | undefined | null | ''): string => {
  const validTypes: Array<MediaResource['type']> = ['video', 'audio', 'blog', 'page', 'external'];
  if (typeValue && validTypes.includes(typeValue)) {
    switch (typeValue) {
      case 'video': return 'tabler:player-play-filled';
      case 'audio': return 'tabler:headphones-filled';
      case 'blog': return 'tabler:article';
      case 'page': return 'tabler:file-text';
      case 'external': return 'tabler:external-link';
    }
  }
  return 'tabler:link';
};

const itemsToDisplay = items || [];
const calculatedLoop = loop && itemsToDisplay.length > Math.floor( (typeof lgSlidesPerView === 'number' ? lgSlidesPerView : (typeof mdSlidesPerView === 'number' ? mdSlidesPerView : (typeof slidesPerView === 'number' ? slidesPerView : 1))) );


const swiperOptionsForDataAttribute = {
  containerClass: swiperContainerClass, 
  paginationClass: swiperPaginationClass,
  nextElClass: swiperNextElClass,
  prevElClass: swiperPrevElClass,
  slidesPerView: slidesPerView,
  mdSlidesPerView: mdSlidesPerView,
  lgSlidesPerView: lgSlidesPerView,
  spaceBetween: spaceBetween,
  loop: calculatedLoop,
  itemsLength: itemsToDisplay.length,
};
---

<section
  id={componentIdBase}
  class:list={[ "resource-swiper-section py-12 md:py-16 lg:py-20 overflow-hidden", classes?.container ?? '', ]}
>
  <div class="container mx-auto px-4 sm:px-6">
    {(headline || subheadline) && ( <div class:list={["text-center mb-10 md:mb-14", classes?.headlineContainer ?? '']}> {subheadline && <p class="text-brand-orange font-semibold uppercase tracking-wider text-sm mb-2">{subheadline}</p>} {headline && <h2 class="text-3xl lg:text-4xl font-bold text-dark-text dark:text-white">{headline}</h2>} </div> )}

    {itemsToDisplay && itemsToDisplay.length > 0 ? (
      <div
        class={`swiper ${swiperContainerClass} ${classes?.swiperContainer ?? '-mx-4 sm:-mx-6 px-4 sm:px-6 relative'}`}
        data-swiper-options={JSON.stringify(swiperOptionsForDataAttribute)} 
      >
        <div class="swiper-wrapper pb-10 md:pb-12">
          {itemsToDisplay.map((item) => {
            if (!item) return null;
            const currentItemType = item.type && ['blog', 'video', 'audio', 'page', 'external'].includes(item.type) ? item.type : 'external';
            const iconName = getIconNameForType(currentItemType);
            const isAstroAsset = typeof item.imageSrc === 'object' && item.imageSrc !== null && 'src' in item.imageSrc;
            const hasImage = !!item.imageSrc;
            const isInteractiveOverlayMedia = currentItemType === 'video' || currentItemType === 'audio';
            return (
              <div class="swiper-slide !w-72 sm:!w-80 h-auto flex !pb-2">
                <a href={item.link} target={(currentItemType === 'video' || currentItemType === 'audio' || currentItemType === 'external' || currentItemType === 'page') ? '_blank' : '_self'} rel={(currentItemType === 'video' || currentItemType === 'audio' || currentItemType === 'external' || currentItemType === 'page') ? 'noopener noreferrer' : ''} class:list={[ "resource-swiper-card group relative block w-full h-[26rem] md:h-[28rem] rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 ease-in-out focus:outline-none focus-visible:ring-4 focus-visible:ring-brand-orange focus-visible:ring-offset-2 dark:focus-visible:ring-offset-slate-900", !hasImage && "bg-slate-100 dark:bg-slate-800" ]} aria-label={`Access ${item.title}`}>
                  {hasImage ? ( isAstroAsset ? ( <Image src={item.imageSrc as ImageMetadata} alt={item.imageAlt} class="absolute inset-0 w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105" widths={[288, 320, 640]} sizes="(max-width: 639px) 80vw, 320px" format="webp" loading="lazy" decoding="async" quality={80}/> ) : ( <img src={item.imageSrc as string} alt={item.imageAlt} class="absolute inset-0 w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105" loading="lazy" decoding="async"/> ) ) : ( <div class="absolute inset-0 bg-slate-200 dark:bg-slate-700 flex items-center justify-center"> <Icon name="tabler:photo-off" class="w-20 h-20 text-slate-400 dark:text-slate-500" /> </div> )}
                  {hasImage && <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent pointer-events-none"></div>}
                  {item.isNew && ( <div class="absolute top-3 right-3 bg-brand-orange text-white text-xs font-semibold px-2.5 py-1 rounded-full z-10 shadow-sm">NEW</div> )}
                  <div class:list={[ "relative h-full flex flex-col justify-end p-5", hasImage ? "text-white" : "text-slate-800 dark:text-slate-100" ]}>
                    {item.category && ( <p class:list={[ "text-xs font-bold uppercase tracking-wider mb-1", hasImage ? "text-brand-orange" : "text-primary-600 dark:text-primary-400" ]}>{item.category}</p> )}
                    <h3 class:list={[ "text-xl font-bold leading-tight mb-2 line-clamp-3", {"group-hover:underline underline-offset-2" : hasImage} ]}> {item.title} </h3>
                    {item.description && ( <p class:list={["text-xs line-clamp-2 mb-2", hasImage ? "text-slate-300/90" : "text-slate-600/90 dark:text-slate-400/90"]}> {item.description} </p> )}
                    <div class:list={[ "flex items-center text-xs mt-auto pt-2 border-t border-transparent", hasImage ? "text-slate-200 border-white/20" : "text-slate-600 dark:text-slate-400 border-slate-300/50 dark:border-slate-600/50" ]}>
                      <Icon name={iconName} class="w-4 h-4 mr-1.5 flex-shrink-0 opacity-80" />
                      <span>{item.sourceName || (currentItemType ? currentItemType.charAt(0).toUpperCase() + currentItemType.slice(1) : '')}</span>
                      {item.durationOrReadTime && <span class="mx-1.5">â€¢</span>}
                      {item.durationOrReadTime && <span>{item.durationOrReadTime}</span>}
                    </div>
                  </div>
                  {isInteractiveOverlayMedia && hasImage && ( <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-20 pointer-events-none"> <div class="bg-black/60 rounded-full p-3 md:p-4 hover:bg-black/80 transition-colors shadow-xl"> <Icon name={iconName} class="w-8 h-8 md:w-10 text-white" /> </div> </div> )}
                </a>
              </div>
            )
          })}
        </div>
        <div class={`swiper-pagination ${swiperPaginationClass} !bottom-0 pt-4 text-center`}></div>
        <div class={`swiper-button-prev ${swiperPrevElClass} !text-brand-orange !left-0 md:!left-[-10px] after:!text-3xl hidden sm:flex z-10`}></div>
        <div class={`swiper-button-next ${swiperNextElClass} !text-brand-orange !right-0 md:!right-[-10px] after:!text-3xl hidden sm:flex z-10`}></div>
      </div>
    ) : ( <p class="text-center text-medium-text dark:text-slate-400">Exciting new resources coming soon!</p> )}
        {/* "View All" Button - STYLING UPDATED HERE */}
        {viewAllLink && (<div class="text-center mt-10 md:mt-14"> <a href={viewAllLink} target={viewAllLink && viewAllLink.startsWith('http') ? '_blank' : '_self'} rel={viewAllLink && viewAllLink.startsWith('http') ? 'noopener noreferrer' : ''} class="inline-flex items-center justify-center gap-2 px-8 py-3 bg-orange-500 hover:bg-orange-600 text-white text-lg font-semibold rounded-full shadow-md transition duration-300 ease-in-out transform hover:scale-105 whitespace-nowrap">
          <span>{viewAllText}</span>
          <Icon name="tabler:arrow-right" class="w-5 h-5 ml-1" /> {/* Added Icon here */}
        </a>
      </div>
    )}
   </div>
</section>


{itemsToDisplay && itemsToDisplay.length > 0 && (
  <script type="module" src={initializeResourceSwiperScriptURL}></script>
)}

<style is:global>
  div[class*="rs-pagination-"] .swiper-pagination-bullet { background-color: #FFAB40; opacity: 0.5; transition: opacity 0.2s ease-in-out, background-color 0.2s ease-in-out; }
  div[class*="rs-pagination-"] .swiper-pagination-bullet-active { background-color: #4CAF50; opacity: 1; }
  div[class*="rs-button-prev-"], div[class*="rs-button-next-"] { z-index: 10; color: #FFAB40 !important; }
  div[class*="resource-swiper-"].swiper { -ms-overflow-style: none; scrollbar-width: none; }
  div[class*="resource-swiper-"].swiper::-webkit-scrollbar { display: none; }
  div[class*="resource-swiper-"] .swiper-slide { height: auto; box-sizing: border-box; }
</style>